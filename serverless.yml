service: aws-remote-websocket-serverless

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.12
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  timeout: 900

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource:
            - { "Fn::GetAtt": ["ClientsTable", "Arn"] }

        - Effect: Allow
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource:
            - { "Fn::GetAtt": ["IRRemotes", "Arn"] }

        - Effect: Allow
          Action:
            - "dynamodb:ConditionCheckItem"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
            - "dynamodb:Query"
          Resource:
            - { "Fn::GetAtt": ["IoTDevices", "Arn"] }

  environment: 
    CLIENTS_TABLE_NAME: ${self:provider.stage}WSClients
    REMOTES_TABLE_NAME: ${self:provider.stage}Remotes
    IOT_DEVICES_TABLE_NAME: ${self:provider.stage}IoTDevices
    WSSAPIGATEWAYENDPOINT:
      Fn::Join:
        - ""
        - - "https://"
          - Ref: WebsocketsApi
          - ".execute-api."
          - Ref: AWS::Region
          - ".amazonaws.com/${sls:stage}"


functions:
  websocketHandler:
    handler: src/handler.handle
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: msg


plugins:
  - serverless-python-requirements

resources:
  Resources:
    ClientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CLIENTS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        # - AttributeName: deviceType
        #   AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

    IRRemotes:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.REMOTES_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: remoteName
            AttributeType: S
          - AttributeName: deviceID
            AttributeType: S
          # - AttributeName: protocol
          #   AttributeType: S
          # - AttributeName: commandSize
          #   AttributeType: S
          # - AttributeName: buttons
          #   AttributeType: L
        KeySchema:
          - AttributeName: remoteName
            KeyType: HASH
          - AttributeName: deviceID
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

    IoTDevices:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.IOT_DEVICES_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: macAddress
            AttributeType: S
          # - AttributeName: deviceName
          #   AttributeType: S
          # - AttributeName: deviceType
          #   AttributeType: S
          # - AttributeName: connectionId
          #   AttributeType: S
        KeySchema:
          - AttributeName: macAddress
            KeyType: HASH
          # - AttributeName: connectionId
          #   KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
